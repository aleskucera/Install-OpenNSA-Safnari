--- 
  - hosts: test_servers
    become: true
    vars_files:
      - vars/general.yml
      - vars/passwords.yml
      - vars/config.yml

    tasks:
       # setup prerequisites
      - name: Install aptitude
        apt: 
          name: aptitude
          update_cache: yes 
          state: latest
        tags: [ prerequisites, setup ]
      
      - name: Install prerequisites
        apt:
          name: "{{ item }}"
          update_cache: yes
          state: latest
        loop: "{{ prerequisites }}"
        tags: [ prerequisites, setup ]
      
      # Create app specific user
      - name: Create a user
        user: 
          name: "{{ app_user }}"
          password: "{{ user_password }}"                              
          state: present
          createhome: yes
          home: "{{ home_path }}"
          shell: /bin/bash
        tags: [ user, setup ]
      
      # Download repo
      - name: Download git repo
        git:
          repo: "{{ repository }}"
          dest: "{{ home_path }}/repo"
          force: yes
        tags: [ repo, setup ]
      
      # Setup virtual enviroment
      - name: Create virtualenv and install requirements
        pip:
          requirements: "{{ home_path }}/repo/requirements.txt"
          virtualenv:  "{{ home_path }}/venv"
          virtualenv_python: python3
        tags: [ setup, virtualenv ]

      # Configuration
      - name: Create directory
        file:
          path: "{{ config_path }}"
          state: directory
          owner: "{{ app_user }}"
          group: "{{ app_user }}"
          mode: '0755'
        tags: [ configuration ]

      - name: Configuration
        template: 
          src: "{{ item.path }}"
          dest: "{{ config_path }}/{{ item.name }}"
        loop: "{{ templates }}"
        tags: [ configuration ]

      # PostgreSQL
      - name: Create PostgreSQL database
        postgresql_db:
          name: "{{ postgres_db }}"
          state: present
        become_user: postgres
        tags: [ PostgreSQL ]

      - name: Create PostgreSQL user
        postgresql_user:
          state: present
          name: "{{ postgres_user }}"
          password: "{{ postgres_user_pass }}"
        become_user: postgres
        tags: [ PostgreSQL ]

      - name: Grant privileges to the database
        postgresql_privs:
          type: database
          database: "{{ postgres_db }}"
          roles: "{{ postgres_user }}"
          grant_option: no
          privs: all
        become_user: postgres
        tags: [ PostgreSQL ]
      
      - name: Run queries from SQL script
        community.postgresql.postgresql_query:
          db: "{{ postgres_db }}"
          path_to_script: "{{ home_path }}/repo/opennsa/datafiles/schema.sql"
          as_single_query: yes
        become_user: postgres
        tags: [ PostgreSQL ]

    handlers:
      - name: Restart PostgreSQL
        service: 
          name: postgresql 
          state: restarted
        tags: [ PostgreSQL ]
      

      

      

      

      

      

      
